#!/usr/bin/env php
<?php 
## rel (release kubuntu/rpi - cp to /opt/app/$app n create a .deb, etccc)

   $arc = isset ($argv [1]) ? 'armhf' : 'amd64';      // any arg=rpi else kub
   $app = "shazware";
   $exe = [
      'big', 'flatten', 'ftx', 'l', 'ned', 'recent', 'renem', 'undup'
   ];
   $siz = "2" . "000000";    // just gimme decimal megabytes

// from src/_build/exe/exe to web d/l dir
   $src = "/home/sh/src";
   $dst = "/home/sh/_/web/pc/download";

// CASE SENSITIVE filesystem dir to build our dang .deb in - NOT ntfs!
   $top = "/opt/app";

   $deb = $app . "_current_$arc";      // our main .deb prefix / dir / etc
   $now = date ('Ymd', time ());
   $ctl = 
"Package: $app\n" .
"Version: $now\n" .
"Architecture: $arc\n" .
"Maintainer: " . 
   "Stephen Hazel<stephen.hazel@gmail.com> https://pianocheetah.app\n" .
"Description: " . 
   "ShazWare - Steve's weird utilities\n" .
"Priority: optional\n" .
"Essential: no\n" .
"Installed-Size: $siz\n" .
"Source:\n";

// mkdir, cp prep dir n cp exes in prep for makin a .deb
   system ("rm -r 2>/dev/null    $top/$deb");
   system ("cp -r $src/$app/zRel $top/$deb");
   $lst = "";
   foreach ($exe as $e) {
      $ex = "opt/app/$app/$e";
      system ("cp $src/_build/$e/$e  $top/$deb/$ex");
      $lst .= " $ex";
   }

// build debian/control to get our dang dependencies
   chdir  ("$top/$deb");
   system ("mkdir DEBIAN");
   system ("mkdir debian");
   file_put_contents ("debian/control", $ctl);
   $out = `dpkg-shlibdeps -v -O $lst`;
   $d = "";   $f = "shlibs:Depends=";
   foreach (explode ("\n", $out) as $o) 
      if (substr ($o, 0, strlen ($f)) == $f)  $d = substr ($o, strlen ($f));
echo "Depends: $d\n";
   system ("rm -fr debian");
   file_put_contents ("DEBIAN/control", $ctl . "Depends: $d\n");

// make .deb n cp to dest folder
   chdir ($top);
   system ("dpkg-deb --build --root-owner-group $deb");
   system ("rm -fr $deb");
   system ("cp $deb" . ".deb  $dst");

// uninstall, install, n kill it
   $del = "sudo dpkg -P $app";            echo `$del`;
   $ins = "sudo dpkg -i $deb" . ".deb";   echo `$ins`;
   system          ("rm $deb" . ".deb");
